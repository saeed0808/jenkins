pipeline {
    agent any

    //tools {
        //jdk 'JDK_1.8.0_20-ea-b05'
        //maven 'MVN_Ver_3.3.3'
    //}
    
    stages {
        stage('Notify Job Start') {
            steps {
                emailext attachLog: false, body: '''$PROJECT_NAME - Build # $BUILD_NUMBER - STARTED:
                Check console output at $BUILD_URL to view the results.''', recipientProviders: [culprits()], subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - STARTED', to: 'saeed.ahmed@gaana.com'
            }
        }
        stage('Workspace Clean') {
            steps { 
            cleanWs()
            }
        }
        stage('Checkout Code from GIT') {
            steps {
                checkout scm: [$class: 'GitSCM',
                               userRemoteConfigs: [[url: 'git@bitbucket.org:times_internet/payments_java_apis_gaana.git', credentialsId: 'BitbucketGaana']], branches: [[name: "${TAG}"]]], poll: false
            }
        }
        stage('Maven Build') {
            steps {
            script {
                try {
                    sh "/data/maven/bin/mvn clean install -DskipTests"
                    } catch (Exception err) {
                            echo 'Maven clean install failed'
                            currentBuild.result = 'FAILURE'
                        } 
                        // finally {
                        //    publishHTMLReports('Reports')
                        //}
                    
            }
        }
        }
        stage('SonarQube Analysis') {
            environment {
                scannerHome = tool 'SonarQubeScanner'
            }
            steps {
                withSonarQubeEnv('SonarQube_6.4') {
                sh "/data/maven/bin/mvn sonar:sonar"
        }
    }
        }
        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    // true = set pipeline to UNSTABLE, false = don't
                    // Requires SonarQube Scanner for Jenkins 2.7+
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        
        stage('Notify Job Status') {
            steps {
                emailext attachLog: false, body: '''$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:
                Check console output at $BUILD_URL to view the results.''', recipientProviders: [culprits()], subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!', to: 'saed.ahmed@gaana.com'
            }
        } 
    }
}


